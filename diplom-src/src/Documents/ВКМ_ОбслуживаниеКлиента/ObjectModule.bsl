#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)

	// регистр ВКМ_ВыполненныеКлиентуРаботы
//	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;

//	Запрос = Новый Запрос;
//	Запрос.Текст =
//		"ВЫБРАТЬ
//		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК Ставка,
//		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействия КАК ДатаНачала,
//		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействия КАК ДатаОкончания,
//		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
//		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
//		|ИЗ
//		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
//		|ГДЕ
//		|	ДоговорыКонтрагентов.Ссылка = &Договор";
	
//	Запрос.УстановитьПараметр("Договор", ВКМ_Договор);
	
//	Выборка = Запрос.Выполнить().Выбрать();
	
//	Если Выборка.Следующий() Тогда

//		Если НЕ (Дата >= Выборка.ДатаНачала И Дата <= Выборка.ДатаОкончания 
//				И ВКМ_Договор = Выборка.Ссылка) Тогда
					
//			ТекстСообщения = "Проведение документа невозможно.
//			|Проверьте тип договора и дату документа: должна входить в период действия договора.";
//			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			
//		КонецЕсли;
		
//		Ставка = Выборка.Ставка;

//	КонецЕсли;
	
//	Если Отказ = Ложь Тогда
		
//		Для Каждого ТекСтрокаРаботы Из ВКМ_ВыполненныеРаботы Цикл
			
//			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
//			Движение.Период = Дата;
//			Движение.ВКМ_Клиент = ВКМ_Клиент;
//			Движение.ВКМ_Договор = ВКМ_Договор;
//			Движение.ВКМ_КоличествоЧасов = ТекСтрокаРаботы.ЧасыКОплатеКлиенту;
//			Движение.ВКМ_СуммаКОплате = ТекСтрокаРаботы.ЧасыКОплатеКлиенту * Ставка;
			
//		КонецЦикла;
		
//	КонецЕсли;


		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СУММА(ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту,
			|	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист КАК Специалист,
			|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
			|ПОМЕСТИТЬ вт_ДокОбслКл
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиента.ВКМ_ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
			|		ПО (ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка)
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
			|СГРУППИРОВАТЬ ПО
			|	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист,
			|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтоимостьЧасаРаботы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник КАК Сотрудник,
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ПроцентОтРабот
			|ПОМЕСТИТЬ вт_РегУслОпл
			|ИЗ
			|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, ВКМ_Сотрудник = &Специалист) КАК
			|		ВКМ_УсловияОплатыСотрудниковСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	вт_ДокОбслКл.СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
			|	вт_ДокОбслКл.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту,
			|	вт_РегУслОпл.ПроцентОтРабот КАК ПроцентОтРабот
			|ИЗ
			|	вт_ДокОбслКл КАК вт_ДокОбслКл
			|		ЛЕВОЕ СОЕДИНЕНИЕ вт_РегУслОпл КАК вт_РегУслОпл
			|		ПО вт_ДокОбслКл.Специалист = вт_РегУслОпл.Сотрудник";
		
		Запрос.УстановитьПараметр("Специалист", ВКМ_Специалист);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Дата", Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ (Дата >= Выборка.ДатаНачала И Дата <= Выборка.ДатаОкончания 
				И ВКМ_Договор = Выборка.Ссылка) Тогда
					
			ТекстСообщения = "Проведение документа невозможно.
			|Проверьте тип договора и дату документа: должна входить в период действия договора.";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			
			КонецЕсли;
			
			Если Выборка.ПроцентОтРабот = Null Тогда
				
				ТекстСообщения = (СтрШаблон("Укажите процент от работ для сотрудника %1 в условиях оплаты.",
													ВКМ_Специалист));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
				Возврат;
				
			Иначе
	
			//регистр ВКМ_ВыполненныеКлиентуРаботы 
				Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
				Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
				Движение.Период = Дата;
				Движение.ВКМ_Клиент = ВКМ_Клиент;
				Движение.ВКМ_Договор = ВКМ_Договор;
				Движение.ВКМ_КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
				Движение.ВКМ_СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы;
			
			//регистр ВКМ_ВыполненныеСотрудникомРаботы
				Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
				Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
				Движение.Период = Дата;
				Движение.ВКМ_Сотрудник = ВКМ_Специалист;
				Движение.ВКМ_ЧасовКОплате = Выборка.ЧасыКОплатеКлиенту;
				Движение.ВКМ_СуммаКОплате = (Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы * Выборка.ПроцентОтРабот) / 100;
			
			КонецЕсли;
			
	КонецЦикла;

		
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"ВКМ_ДатаПроведенияРабот, ВКМ_ВремяНачалаРабот, ВКМ_Специалист"); 
	
	Если РеквизитыОбъекта.ВКМ_ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот
		Или РеквизитыОбъекта.ВКМ_ВремяНачалаРабот <> ВКМ_ВремяНачалаРабот
		Или РеквизитыОбъекта.ВКМ_Специалист <> ВКМ_Специалист Тогда 
		ДанныеИзменены = Истина;
	Иначе
		ДанныеИзменены = Ложь;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ДанныеИзменены", ДанныеИзменены);
	ДополнительныеСвойства.Вставить("ЗаписанВпервые", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЗаписанВпервые Тогда

		ТекстСообщения = СтрШаблон("Создан заказ №%1: 
		|Исполнитель %2, дата проведения работ %3 с %4 по %5", 
		Номер, 
		ВКМ_Специалист,
		Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), 
		Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), 
		Формат(ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		
		ДокументОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ДокументОбъект.ВКМ_Текст = ТекстСообщения;
		ДокументОбъект.Записать();

	ИначеЕсли ДополнительныеСвойства.ДанныеИзменены Тогда

		Сообщение = СтрШаблон("Заказ №%1 изменен. Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер,
			ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокументОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ДокументОбъект.ВКМ_Текст = Сообщение;
		ДокументОбъект.Записать();

	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#КонецЕсли

