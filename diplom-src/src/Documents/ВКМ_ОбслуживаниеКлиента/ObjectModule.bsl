#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)

	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК Ставка,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействия КАК ДатаНачала,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействия КАК ДатаОкончания,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор";
	
	Запрос.УстановитьПараметр("Договор", ВКМ_Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда

		Если НЕ (Дата >= Выборка.ДатаНачала И Дата <= Выборка.ДатаОкончания 
				И ВКМ_Договор = Выборка.Ссылка) Тогда
					
			ТекстСообщения = "Проведение документа невозможно.
			|Проверьте тип договора и дату документа: должна входить в период действия договора.";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			
		КонецЕсли;
		
		Ставка = Выборка.Ставка;

	КонецЕсли;
	
	Если Отказ = Ложь Тогда
		
		Для Каждого ТекСтрокаРаботы Из ВКМ_ВыполненныеРаботы Цикл
			
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.Период = Дата;
			Движение.ВКМ_Клиент = ВКМ_Клиент;
			Движение.ВКМ_Договор = ВКМ_Договор;
			Движение.ВКМ_КоличествоЧасов = ТекСтрокаРаботы.ЧасыКОплатеКлиенту;
			Движение.ВКМ_СуммаКОплате = ТекСтрокаРаботы.ЧасыКОплатеКлиенту * Ставка;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"ВКМ_ДатаПроведенияРабот, ВКМ_ВремяНачалаРабот, ВКМ_Специалист"); 
	
	Если РеквизитыОбъекта.ВКМ_ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот
		Или РеквизитыОбъекта.ВКМ_ВремяНачалаРабот <> ВКМ_ВремяНачалаРабот
		Или РеквизитыОбъекта.ВКМ_Специалист <> ВКМ_Специалист Тогда 
		ЗаказИзменен = Истина;
	Иначе
		ЗаказИзменен = Ложь;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЗаказИзменен", ЗаказИзменен);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЭтоНовый Тогда

		ТекстСообщения = СтрШаблон("Создан заказ №%1: 
		|Исполнитель %2, дата проведения работ %3 с %4 по %5", 
		Номер, 
		ВКМ_Специалист,
		Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), 
		Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), 
		Формат(ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		
		ДокументОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ДокументОбъект.ВКМ_Текст = ТекстСообщения;
		ДокументОбъект.Записать();

	ИначеЕсли ДополнительныеСвойства.ЗаказИзменен Тогда

		Сообщение = СтрШаблон("Заказ №%1 изменен. Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер,
			ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокументОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ДокументОбъект.ВКМ_Текст = Сообщение;
		ДокументОбъект.Записать();

	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#КонецЕсли

